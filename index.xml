<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Doge Codes</title>
    <link>https://cpp-doge.github.io/</link>
    <description>Recent content in Home on Doge Codes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://cpp-doge.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1 - Introduction</title>
      <link>https://cpp-doge.github.io/guides/building-software/introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/guides/building-software/introduction/</guid>
      <description>Overview This is a simplified guide on the basics of how to use common C++ compilers from the command line.
How Long Does This Take? This guide should probably require about 30 minutes to read in total, or even less if you only read the sections on GCC or MSVC.
The goal is for this to be short and to the point, an efficient and worthwhile investment of your time.</description>
    </item>
    
    <item>
      <title>1 - What Is The CLI</title>
      <link>https://cpp-doge.github.io/guides/command-line-primer/what-is-the-command-line/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/guides/command-line-primer/what-is-the-command-line/</guid>
      <description>What Is It CLI means Command Line Interface, or simply Command Line.
The command line is usually a black screen or window into which you can enter and run plain text commands.
This means you need to know about the commands that are available and how to run them. There are no buttons, no icons and no menus you can use to navigate.
Long ago the command prompt was the only way to use your computer.</description>
    </item>
    
    <item>
      <title>2 - About File Paths</title>
      <link>https://cpp-doge.github.io/guides/command-line-primer/about-file-paths/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/guides/command-line-primer/about-file-paths/</guid>
      <description>Files &amp;amp; Folders Long ago, we used to store information on bits of dead trees on our desks and in boxes. No more.
Photo by Maksym Kaharlytskyi
You have files on your computer. You probably have things like photos, music, videos, spreadsheets, video game saves and many other possible kinds of files.
Your files are organized in folders, much like a traditional old school filing cabinet. One major difference is that folders on a computer can have many other folders and files inside them where usually a physical filing cabinet does not typically have folders inside of other folders (but it could, who knows!</description>
    </item>
    
    <item>
      <title>2a - GCC Basics</title>
      <link>https://cpp-doge.github.io/guides/building-software/gcc-basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/guides/building-software/gcc-basics/</guid>
      <description>Using GCC Here&amp;rsquo;s how to use g++ on the command line to build and run a simple C++ program consisting of a single main.cpp source file.
elmo@doge:~$ cd project elmo@doge:~/project$ g++ main.cpp elmo@doge:~/project$ ./a.out Hello World! Be sure to use g++ and NOT gcc when you compile your C++ programs.
See G++ And Clang++
The ./ is important, you must use a fully qualified path to run your program.
Notice also that the resulting program is oddly named a.</description>
    </item>
    
    <item>
      <title>2b - MSVC Basics</title>
      <link>https://cpp-doge.github.io/guides/building-software/msvc-basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/guides/building-software/msvc-basics/</guid>
      <description>Before You Begin Be sure you are using the Developer Tools PowerShell
THIS IS CRITICALLY IMPORTANT
About The Compiler The Microsoft command line compiler program is named cl.exe and the command line linker program is named link.exe.
We can omit the .exe when running these, so to run the compiler we simply run the cl command or to run the linker we simply run the link command.
Using Visual Studio Here&amp;rsquo;s how to use cl on the command line to build and run a simple C++ program consisting of a single main.</description>
    </item>
    
    <item>
      <title>3 - CLI Basics</title>
      <link>https://cpp-doge.github.io/guides/command-line-primer/command-line-basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/guides/command-line-primer/command-line-basics/</guid>
      <description>Photo Sai Kiran Anagani
The Command Prompt When you open your terminal, you will be greeted with your shell prompt.
Bash In Bash it looks something like this
elmo@doge:~$ The little squiggle ~ is special, it is short for your local user directory.
PowerShell In PowerShell it looks something like this
C:\Users\elmo&amp;gt; The prompt usually shows you some information about your computer and where you are, like your username and the path to the current working directory.</description>
    </item>
    
    <item>
      <title>3a - Libraries Basics</title>
      <link>https://cpp-doge.github.io/guides/building-software/libs-basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/guides/building-software/libs-basics/</guid>
      <description>Introduction There is too much to cover in this guide. This guide presents most of the bare bones basics of working with libraries on your own, by hand, from the command line.
Expect that you will need to continue learning, researching and studying as you grow your skills and career as a programmer.
Motivation It is critically important to understand the basics of creating and using your own libraries so that you are better and more able to use other people&amp;rsquo;s libraries with less pain.</description>
    </item>
    
    <item>
      <title>3b - GCC Libraries</title>
      <link>https://cpp-doge.github.io/guides/building-software/gcc-libs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/guides/building-software/gcc-libs/</guid>
      <description>Static Libraries Compile Object Files First compile your .cpp source files into individual object files as you would normally do.
g++ -c algebra.cpp -o algebra.o g++ -c calculus.cpp -o calculus.o g++ -c physics.cpp -o physics.o g++ -c graphics.cpp -o graphics.o Create The Static Library Now link your object files into a final resulting static library.
We will name our library VGM, which stands for &amp;ldquo;Video Game Math&amp;rdquo;.
Run this command to create the static library.</description>
    </item>
    
    <item>
      <title>3c - MSVC Libraries</title>
      <link>https://cpp-doge.github.io/guides/building-software/msvc-libs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/guides/building-software/msvc-libs/</guid>
      <description>Before You Begin Be sure you are using the Developer Tools PowerShell
THIS IS CRITICALLY IMPORTANT
Static Libraries Compile Object Files First compile your .cpp source files into individual object files as you would normally do.
cl -EHsc -c algebra.cpp -Fo&amp;#34;algebra.obj&amp;#34; cl -EHsc -c calculus.cpp -Fo&amp;#34;calculus.obj&amp;#34; cl -EHsc -c physics.cpp -Fo&amp;#34;physics.obj&amp;#34; cl -EHsc -c graphics.cpp -Fo&amp;#34;graphics.obj&amp;#34; You need the -EHsc flag or you will probably get some warnings relating to exceptions.</description>
    </item>
    
    <item>
      <title>4 - Intermediate CLI</title>
      <link>https://cpp-doge.github.io/guides/command-line-primer/command-line-intermediate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/guides/command-line-primer/command-line-intermediate/</guid>
      <description>Photo Sai Kiran Anagani
Scripting You can write programs using the programming language of your shell, usually called your shell scripting language.
These programs can do almost anything.
Some ideas for things you could do
Backup your vacation photos Backup your game saves Run different Minecraft versions with different mods Launch a video game with a high priority for better performance Compile and run a program you wrote Compile and run a program someone else wrote Manage a Git repository Rename hundreds of files at once Resize, rotate, crop and blur hundreds of images at once Aliases Aliases are a way to make common commands shorter, easier and faster to type and run.</description>
    </item>
    
    <item>
      <title>4a - Compile Flags Basics</title>
      <link>https://cpp-doge.github.io/guides/building-software/flags-basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/guides/building-software/flags-basics/</guid>
      <description>Compile Flags Your compiler has hundreds, maybe even thousands of command line flags that help control how you build your programs.
You have already seen several of these in previous examples, however there are several more important flags you should familiarize yourself with.
You should familiarize yourself with flags that control things like
C++ Language Version C++ Standard Library Warning &amp;amp; Error Levels Performance Optimization Debugging Unicode &amp;amp; Character Sets Include File Search Directories Library File Search Directories The next sections will detail some of these flags for each compiler and how to use them and why.</description>
    </item>
    
    <item>
      <title>4b - GCC Flags</title>
      <link>https://cpp-doge.github.io/guides/building-software/gcc-flags/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/guides/building-software/gcc-flags/</guid>
      <description>GCC Flags For more information on all of this stuff&amp;hellip;
See GCC Options
Most of this should work the same between Clang and GCC.
C++ Language Version C++ like many things has versions. You can be sure you&amp;rsquo;re using a specific version of C++ with the latest features by adding a compiler flag to control the so called language standard.
Use the -std flag to configure this.
g++ -std=c++20 main.cpp I always recommend setting the language standard explicitly.</description>
    </item>
    
    <item>
      <title>4c - MSVC Flags</title>
      <link>https://cpp-doge.github.io/guides/building-software/msvc-flags/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/guides/building-software/msvc-flags/</guid>
      <description>MSVC Flags For more information on all of this stuff&amp;hellip;
See MSVC Compiler Options
Be sure you are using the Developer Tools PowerShell
THIS IS CRITICALLY IMPORTANT
C++ Language Version C++ like many things has versions. You can be sure you&amp;rsquo;re using a specific version of C++ with the latest features by adding a compiler flag to control the so called language standard.
Use the -std flag to configure this.</description>
    </item>
    
    <item>
      <title>5 - About Environment Variables</title>
      <link>https://cpp-doge.github.io/guides/command-line-primer/about-environment-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/guides/command-line-primer/about-environment-variables/</guid>
      <description>Photo Sai Kiran Anagani
Environment Variables An environment variable is a way to save some info in a place where your programs can always get to it.
You can set environment variables so that all programs have them or only for one program at a time.
Syntax Environment variables look like regular variables in your shell scripting language.
Bash environment variables begin with $ and the name, so for example $HELLO could be an environment variable in Bash.</description>
    </item>
    
    <item>
      <title>5a - Dirpath Basics</title>
      <link>https://cpp-doge.github.io/guides/building-software/dirpath-basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/guides/building-software/dirpath-basics/</guid>
      <description>Directory Paths When you compile a program your compiler will search in a large number of different directories for things like header include files and link library files.
Depending on your OS and file structure, you may need to observe some other considerations around the files and folders of your project including your programs and libraries.
Concepts Overview
Include File Search Directories Library File Search Directories Binary Search Directories Library Loader Directories File Search Directories Most C++ programs will use so called header include files or just headers for short.</description>
    </item>
    
    <item>
      <title>5a - GCC Paths</title>
      <link>https://cpp-doge.github.io/guides/building-software/gcc-paths/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/guides/building-software/gcc-paths/</guid>
      <description>GCC Paths Include File Search Directories Say you want your includes to live in their own separate directory like my_headers.
You can add more folders to be searched for header include files with the -I flag, where -I stands for &amp;ldquo;include&amp;rdquo;.
g++ -I ~/project/my_headers main.cpp Now you can #include any files from my_headers in the source code of main.cpp.
GCC Link Library Flags The -l flag is new to us. Let&amp;rsquo;s explain it before moving on.</description>
    </item>
    
    <item>
      <title>5c - MSVC Paths</title>
      <link>https://cpp-doge.github.io/guides/building-software/msvc-paths/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/guides/building-software/msvc-paths/</guid>
      <description>MSVC Paths Be sure you are using the Developer Tools PowerShell
THIS IS CRITICALLY IMPORTANT
Include File Search Directories Say you want your includes to live in their own separate directory like my_headers.
You can add more folders to be searched for header include files with the -I flag, where -I stands for &amp;ldquo;include&amp;rdquo;.
cl -I&amp;#34;C:\project\my_headers&amp;#34; main.cpp Now you can #include any files from my_headers in the source code of main.</description>
    </item>
    
    <item>
      <title>6 - Advanced CLI</title>
      <link>https://cpp-doge.github.io/guides/command-line-primer/command-line-advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/guides/command-line-primer/command-line-advanced/</guid>
      <description>Photo Sai Kiran Anagani
Basic Boolean Tests You can use basic boolean tests. This mostly works based on whether another command succeeds or not.
Bash The Test command is the special character [.
The Test command on Linux lets you check if something is true or not.
The test command contains what should hopefully be mostly familiar expressions and ends with ], like this
[ &amp;#34;hello&amp;#34; == &amp;#34;world&amp;#34; ] This checks to see if hello is the same as world.</description>
    </item>
    
    <item>
      <title>7 - Customize</title>
      <link>https://cpp-doge.github.io/guides/command-line-primer/configuring-your-shell/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/guides/command-line-primer/configuring-your-shell/</guid>
      <description>Photo Sai Kiran Anagani
Configuring Your Shell Most shells let you customize your settings through the use of special startup files. Your startup file is just a shell script that runs each time you open your shell.
The Startup File The Bash startup file lives in $HOME/.bashrc. The rc suffix means run control and is a historical thing from Linux systems.
The PowerShell 7 startup file lives in $env:USERPROFILE\Documents\PowerShell\Microsoft.PowerShell_profile.ps1</description>
    </item>
    
    <item>
      <title>About Phone Doggo</title>
      <link>https://cpp-doge.github.io/pages/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/pages/about/</guid>
      <description>Hello? Yes? This is Doge. About Me About This Blog This is a blog about mostly C++ programming, mostly for newbies.
If you are already advanced then you are generally not the target audience.
Simple, approachable and easy to understand is the goal here.
Reduced cognitive load and reduced barriers to entry are paramount here Deals frequently &amp;amp; frivolously in hyperbolic incendiary claims Wantonly discards pedantry in favor of punchiness, humor, sarcasm and staying power in the mind Calously ignores details in favor of simplicity and ease of understanding for the layman As my Calculus professor once said:</description>
    </item>
    
    <item>
      <title>About PowerShell</title>
      <link>https://cpp-doge.github.io/posts/powershell/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/posts/powershell/</guid>
      <description>Before You Begin You should understand the basics of what the command line is.
See: Command Line Primer
PowerShell PowerShell is a shell from Microsoft.
You should use PowerShell 7 if you are on Windows.
Download: PowerShell 7
PowerShell is greatly superior to the ancient and outdated legacy DOS batch shell named cmd.exe or simply named &amp;ldquo;Command Prompt&amp;rdquo; in your Windows Start Menu.
Add A Better Terminal You should also use Windows Terminal.</description>
    </item>
    
    <item>
      <title>Attention To Detail</title>
      <link>https://cpp-doge.github.io/limbo/style/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/limbo/style/</guid>
      <description>Why It Matters If it makes my eyes bleed, am I going to be motivated to help?
Attention To Detail Is Important Programming is a detail oriented art. If you neglect details you will make lots of mistakes, your code will be bad, your programs will have errors, you will cause yourself (and others) much undue pain debugging problems you could have easily avoided.
Caring is important If you don&amp;rsquo;t care about something then you won&amp;rsquo;t do a good job.</description>
    </item>
    
    <item>
      <title>C Compatibility Headers</title>
      <link>https://cpp-doge.github.io/posts/c-compatibility-headers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/posts/c-compatibility-headers/</guid>
      <description>This Is Bad You may often see C++ code like this
#include &amp;lt;stdio.h&amp;gt; #include &amp;lt;math.h&amp;gt; int main() { float x = sqrt(3.14); printf(&amp;#34;%f&amp;#34;, x); } These are C compatibility headers. Don&amp;rsquo;t use them in C++.
Do This Instead Put the letter c in front, remove the .h and add the std namespace.
#include &amp;lt;cstdio&amp;gt; #include &amp;lt;cmath&amp;gt; int main() { float x = std::sqrt(3.14); std::printf(&amp;#34;%f&amp;#34;, x); } </description>
    </item>
    
    <item>
      <title>Creating An MCVE</title>
      <link>https://cpp-doge.github.io/limbo/minimal-reproducible-example/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/limbo/minimal-reproducible-example/</guid>
      <description>Basics TLDR Shorten your code and post it to Wandbox.org
See also: Howto Use Wandbox Video
What Is It? A Minimal Reproducible Example is exactly enough code to demonstrate your problem, but no more and no less.
Sometimes also known as a Minimal Complete and Viable Example or MCVE.
How Do I Make One? See: Howto Use Wandbox Video
Use an online compiler website that can compile and run your code like</description>
    </item>
    
    <item>
      <title>G&#43;&#43; And Clang&#43;&#43;</title>
      <link>https://cpp-doge.github.io/posts/gcc-clang-plus-plus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/posts/gcc-clang-plus-plus/</guid>
      <description>What Is This About? A common mistake is not running the right command when compiling a C++ program.
So Which Command Do I Use? If you are using GCC then use the g++ command
g++ main.cpp -o main If you are using Clang then use the clang++ command
clang++ main.cpp -o main Why Is This A Thing? The GNU Compiler Collection is known as GCC. Confusingly this collection of compilers also includes a program named gcc, however this is not what you want.</description>
    </item>
    
    <item>
      <title>Getline And Cin</title>
      <link>https://cpp-doge.github.io/posts/getline-cin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/posts/getline-cin/</guid>
      <description>Does Noob A Bamboozle Using getline() together with cin &amp;gt;&amp;gt; is a sharp corner.
This guide will help you figure that out.
The Problem When you use &amp;gt;&amp;gt; to get input from a stream, then the stream does not consume whitespace after your input.
This means for example that if you cin &amp;gt;&amp;gt; up to the end of the line, then the subsequent newline \n character will still remain in the stream.</description>
    </item>
    
    <item>
      <title>How Binary Works</title>
      <link>https://cpp-doge.github.io/posts/how-binary-works/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/posts/how-binary-works/</guid>
      <description>What Is A Number System What Is A Base The base of your number system is how many digits you have.
We doggos use a beef hotdog number system.
No, wait&amp;hellip; we use a base ten number system.
What does that actually mean though?
I&amp;rsquo;m The Only Tigger We have been using base ten for so long in our normal lives, like at the grocery store or when talking about football scores, that it just feels natural and normal to most people.</description>
    </item>
    
    <item>
      <title>Links To Stuff</title>
      <link>https://cpp-doge.github.io/pages/links/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/pages/links/</guid>
      <description>Learn With Games (this is not the only section on this page, keep scrolling for other stuff)
I love games. I love programming.
These are games that teach programming, are turing complete enough to build a full computer inside the game, are about programming or they contain programming inside the game in some way, etc etc.
Shenzhen I/O
Stationeers
Stationeers MIPS Documentation Stationeers MIPS Simulator Space Engineers
12 Free Beginner Coding Games</description>
    </item>
    
    <item>
      <title>Objections</title>
      <link>https://cpp-doge.github.io/inferno/objections/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/inferno/objections/</guid>
      <description>Frequently Asked Questions We&amp;rsquo;ve been trying to contact you about your car&amp;rsquo;s extended warranty.
Please be sure your seat backs and tray tables are in their fully upright and locked positions as we begin our final descent into Hell.
Your Honor I Object! We regret to inform you that your programming help insurance has been cancelled.
Your supervisor will be with you shortly.
Why Am I Here People have been wondering this for thousands of years and we still don&amp;rsquo;t have many good answers.</description>
    </item>
    
    <item>
      <title>Software Design</title>
      <link>https://cpp-doge.github.io/posts/software-design/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/posts/software-design/</guid>
      <description>TLDR Put more tools in your proverbial toolbox, especially FP tools.
The more tools you have at your disposal the better choices you can make and the better software you will write.
About This Page This is mostly (but not entirely) a collection of YouTube videos, generally from well renowned programmers, covering a wide range of topics.
I claim that this constitutes, effectively, a mini course on software design and architecture, regardless of language.</description>
    </item>
    
    <item>
      <title>Styling Your Code</title>
      <link>https://cpp-doge.github.io/posts/style/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/posts/style/</guid>
      <description>A Matter Of Style What Is Style Style consists of the subjective choices you make like how you name your variables, how you organize your files, how much whitespace you use and where you put that whitespace.
Automatic Tools You can use tools to automatically format your code.
Clang Format Clang Tidy These tools do a lot but they don&amp;rsquo;t do everything. You still need to observe some guidelines by hand.</description>
    </item>
    
    <item>
      <title>Use An IDE</title>
      <link>https://cpp-doge.github.io/limbo/use-an-ide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/limbo/use-an-ide/</guid>
      <description>In 60 Seconds Use Visual Studio for Windows. It&amp;rsquo;s FREE! It does everything you want.
Download: Visual Studio
Visual Studio is not VSCode, they are different products. Visual Studio comes with a compiler, no need for MinGW. See also I Am Not Using Windows
See also I Want To Use Something Else
Visual Studio doesn&amp;rsquo;t configure itself, you still have to do that, but doing so should be much easier for beginners as compared to VSCode.</description>
    </item>
    
    <item>
      <title>Wandbox Example Video</title>
      <link>https://cpp-doge.github.io/posts/using-wandbox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/posts/using-wandbox/</guid>
      <description>How To Use Wandbox Here&amp;rsquo;s a video showing how to create a Wandbox example with multiple .cpp files and user input.
NOVIDEO </description>
    </item>
    
    <item>
      <title>What Is A Data Type</title>
      <link>https://cpp-doge.github.io/posts/what-is-a-data-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/posts/what-is-a-data-type/</guid>
      <description>Before You Begin See: How Binary Works
Computer Memory Computers store information in memory as binary numbers.
Transistors Transistors are good at turning on and off. This can easily be used represent a one or a zero.
The information in your computer is managed by a bunch of transitors. You can think of it like being one bit per transistor, meaning each transistor can represent either a zero or a one.</description>
    </item>
    
    <item>
      <title>Where Do I Start</title>
      <link>https://cpp-doge.github.io/limbo/where-do-i-start/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/limbo/where-do-i-start/</guid>
      <description>Where Do I Start Begin by reading your textbook.
But I Don&amp;rsquo;t Have A Textbook Use the one from your syllabus.
But I Don&amp;rsquo;t Have A Syllabus You probably do. Ask your TAs or your professor for book recommendations.
Anyway, you could try a free one like this
Free CompSci Curriculum But I Don&amp;rsquo;t Have A Syllabus Textbook Then get yourself a book, there are free books available.
Paid books are still generally better.</description>
    </item>
    
    <item>
      <title>Which C&#43;&#43; Book?</title>
      <link>https://cpp-doge.github.io/posts/which-cpp-book/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/posts/which-cpp-book/</guid>
      <description>What Should I Choose? These are pretty good, though I haven&amp;rsquo;t read them all, some may be better or worse. Some may be better for your skill level than others.
As you&amp;rsquo;ll see, not all of these are books, but you should probably get a book.
You agree to not hold me liable if any of these eats your first born child, kicks your puppy or is otherwise nasty to you.</description>
    </item>
    
    <item>
      <title>Why C&#43;&#43; Instead of C</title>
      <link>https://cpp-doge.github.io/limbo/why-cpp-instead-of-c/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/limbo/why-cpp-instead-of-c/</guid>
      <description>What Is The Point? I&amp;rsquo;m not here to change your mind if you&amp;rsquo;re a C programmer and you like C and you wish to continue using C.
To the end that C++ programmers may wish to advocate C++ to their C programmer friends, this is a mandatory video to watch.
If you want more perspective on how some C++ programmers feel about C, then this video may be illuminating.
If you, for whatever reason, have an interest in C++ or you want more explanations as to the differences between C and C++, why I like C++, and what makes C++ good, then read on.</description>
    </item>
    
    <item>
      <title>You Are A Toxic Idiot</title>
      <link>https://cpp-doge.github.io/inferno/you-are-a-toxic-idiot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/inferno/you-are-a-toxic-idiot/</guid>
      <description>Of Course You Are Literally the most important person in the world. All knowing, all seeing, wise beyond your years, intellect beyond comprehension. Everyone should listen to you speak, no one should ever doubt your sage advice.
Why Wouldn&amp;rsquo;t You Be? A prime specimen, a beacon of humility, a bastion of kindness, a champion of morality, a pillar of the community, a solution to all suffering, the center of wisdom and reason, a holy pure light shining from heaven, a righteous fire, savior of puppies and kittens, infallible, a veritable vanguard of humanity.</description>
    </item>
    
    <item>
      <title>You Are Wrong</title>
      <link>https://cpp-doge.github.io/inferno/you-are-wrong/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpp-doge.github.io/inferno/you-are-wrong/</guid>
      <description>Why You Are Wrong If You Came Here To Tell Me I Should Say This Other Thing Instead This is a blog mostly aimed at newbies. This blog is probably not for you.
This blog is what it is intended to be for its target audience.
If You Came Here To Tell Me I Should Advise Some Other Probably Advanced Tool Or Technique Instead Reducing Complexity Read about the mission statement and objectives of this blog.</description>
    </item>
    
  </channel>
</rss>
